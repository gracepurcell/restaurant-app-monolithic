apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres-service
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
      - name: init-postgres
        image: postgres:latest
        command: ["sh", "-c"]
        # This init container creates a non-root user and adjusts permissions on the data directory.
        args:
        - |
          # Create the non-root user with UID 1001
          useradd -u 1001 postgres_user && \
          chown -R 1001:1001 /var/lib/postgresql/data
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-persistent-storage
          subPath: postgres

      containers:
      - name: postgres
        image: postgres:latest
        # Set the security context for the main container
        securityContext:
          runAsUser: 1001 # Use the UID of the created postgres_user
          fsGroup: 1001 # Use the GID to ensure proper permissions on mounted volumes

        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              if [ "$(POD_NAME)" = "postgres-0" ]; then
                psql -U $(POSTGRES_USER) -d $(POSTGRES_DB) -c "SELECT 1;"
              else
                psql -U $(POSTGRES_USER) -d $(POSTGRES_DB) -c "SELECT * FROM pg_stat_replication;"
              fi
          initialDelaySeconds: 15
          periodSeconds: 10

        # Start-up commands with initdb check
        command:
        - sh
        - -c
        - |
          if [ "$(POD_NAME)" = "postgres-0" ]; then
            # Check if data directory is initialized
            if [ ! -f "/var/lib/postgresql/data/PG_VERSION" ]; then
              echo "Initializing database..."
              initdb -D /var/lib/postgresql/data
            fi
            pg_ctl -D /var/lib/postgresql/data -o "-c listen_addresses='*'" -w start
          else
            # Replica setup
            until pg_basebackup -h postgres-0.postgres-service -D /var/lib/postgresql/data -U "$(POSTGRES_REPLICATION_USER)" -vP -W; do
              echo "Waiting for master to be ready..."
              sleep 5
            done
            pg_ctl -D /var/lib/postgresql/data -o "-c listen_addresses='*'" -w start
          fi

        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-persistent-storage
          subPath: postgres

        env:
        #- name: PGDATA
        #  value: /var/lib/postgresql/data

        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: postgres-user
              name: mysecret

        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: mysecret

        - name: POSTGRES_DB
          value: flor_de_sal

        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

        - name: POSTGRES_REPLICATION_USER
          value: "replicator"

        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: mysecret

  volumeClaimTemplates:
  - metadata:
      name: postgres-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: ebs-sc-csi
      resources:
        requests:
          storage: 20Gi
